package LibDL.nn;

import LibDL.Tensor.Variable;
import org.junit.Test;
import org.nd4j.linalg.api.ndarray.INDArray;
import org.nd4j.linalg.factory.Nd4j;

import static org.junit.Assert.assertEquals;

public class Conv2dTest {

    @Test
    public void testForward() {
        Variable input = new Variable(Nd4j.linspace(1, 192, 192).reshape(2, 2, 8, 6));
        Conv2d conv2d = new Conv2d.Builder(2, 4, 3, 2)
                .stride(2, 1)
                .padding(1)
                .dilation(1, 2)
                .groups(2)
                .bias(true)
                .build();
        conv2d.setW(Nd4j.create(new double[][][][] {
        {{{-0.17815330625,  0.32907849550},
          { 0.01410037279,  0.32832193375},
          { 0.39775222540,  0.02987906337}}},


        {{{-0.23120266199,  0.35665094852},
          { 0.10279321671, -0.26305636764},
          { 0.29569983482, -0.22699195147}}},


        {{{-0.31289410591, -0.36867079139},
          { 0.28278410435,  0.18912410736},
          { 0.25963515043, -0.25724571943}}},


        {{{ 0.26572823524, -0.06010720134},
          { 0.11230456829, -0.02964356542},
          {-0.21560503542,  0.23178029060}}}}));
        conv2d.setB(Nd4j.create(new double[]
                {-0.16674683988, -0.13072055578,  0.34829020500, -0.03628411889}).reshape(4));
        conv2d.setInput(input);
        conv2d.forwardWithInput();
        INDArray expected = Nd4j.create(new double[][][][]{
        {{{ 7.28929519653e-01,  3.88549637794e+00,  4.65555047989e+00,  5.42560386658e+00,  6.19565773010e+00,  4.27902984619e+00},
          { 7.65996980667e+00,  1.48407735825e+01,  1.57617511749e+01,  1.66827297211e+01,  1.76037101746e+01,  7.26157426834e+00},
          { 1.59073228836e+01,  2.58925209045e+01,  2.68134975433e+01,  2.77344760895e+01,  2.86554546356e+01,  1.00659646988e+01},
          { 2.41546764374e+01,  3.69442634583e+01,  3.78652420044e+01,  3.87862167358e+01,  3.97071990967e+01,  1.28703575134e+01}},

         {{-2.47276902199e+00, -7.90125072002e-01, -8.81680428982e-01, -9.73235785961e-01, -1.06479072571e+00,  3.63594365120e+00},
          {-5.50014066696e+00, -2.97348916531e-01, -2.63455331326e-01, -2.29561746120e-01, -1.95669114590e-01,  5.87463045120e+00},
          {-7.10090970993e+00,  1.09367430210e-01,  1.43261492252e-01,  1.77153646946e-01,  2.11047232151e-01,  7.88211584091e+00},
          {-8.70167827606e+00,  5.16084253788e-01,  5.49976885319e-01,  5.83870470524e-01,  6.17762148380e-01,  9.88960075378e+00}},

         {{-4.60126399994e+00,  2.34669685364e+01,  2.39412631989e+01,  2.44155616760e+01,  2.48898582458e+01,  3.06543197632e+01},
          {-2.60642890930e+01, -9.06486797333e+00, -9.27213954926e+00, -9.47940731049e+00, -9.68667125702e+00,  1.87025985718e+01},
          {-3.13057994843e+01, -1.15520753860e+01, -1.17593431473e+01, -1.19666147232e+01, -1.21738786697e+01,  2.14569015503e+01},
          {-3.65473098755e+01, -1.40392847061e+01, -1.42465505600e+01, -1.44538183212e+01, -1.46610841751e+01,  2.42112026215e+01}},

         {{ 1.14612340927e+01,  5.30801725388e+00,  5.40685319901e+00,  5.50569057465e+00,  5.60452651978e+00, -6.80483913422e+00},
          { 1.05208711624e+01,  1.76829948425e+01,  1.79874534607e+01,  1.82919101715e+01,  1.85963668823e+01,  7.63352251053e+00},
          { 1.22252254486e+01,  2.13364849091e+01,  2.16409397125e+01,  2.19453983307e+01,  2.22498531342e+01,  9.58265399933e+00},
          { 1.39295806885e+01,  2.49899692535e+01,  2.52944278717e+01,  2.55988826752e+01,  2.59033412933e+01,  1.15317850113e+01}}},


        {{{ 3.51162223816e+01,  7.78106384277e+01,  7.85806884766e+01,  7.93507461548e+01,  8.01208038330e+01,  4.38168754578e+01},
          { 7.36388015747e+01,  1.03254730225e+02,  1.04175704956e+02,  1.05096702576e+02,  1.06017669678e+02,  2.96967067719e+01},
          { 8.18861541748e+01,  1.14306488037e+02,  1.15227462769e+02,  1.16148429871e+02,  1.17069419861e+02,  3.25010986328e+01},
          { 9.01335067749e+01,  1.25358222961e+02,  1.26279205322e+02,  1.27200180054e+02,  1.28121154785e+02,  3.53054885864e+01}},

         {{-4.95174102783e+01, -9.57942771912e+00, -9.67098426819e+00, -9.76254081726e+00, -9.85409355164e+00,  4.18912734985e+01},
          {-1.83062896729e+01,  2.95638227463e+00,  2.99027585983e+00,  3.02416753769e+00,  3.05806112289e+00,  2.19345092773e+01},
          {-1.99070568085e+01,  3.36309576035e+00,  3.39699316025e+00,  3.43088674545e+00,  3.46477651596e+00,  2.39419937134e+01},
          {-2.15078258514e+01,  3.76980924606e+00,  3.80370855331e+00,  3.83759832382e+00,  3.87149572372e+00,  2.59494781494e+01}},

         {{-1.11409387589e+01,  6.89995346069e+01,  6.94738388062e+01,  6.99481430054e+01,  7.04224319458e+01,  8.27265701294e+01},
          {-6.79963607788e+01, -2.89625320435e+01, -2.91697921753e+01, -2.93770675659e+01, -2.95843315125e+01,  4.07370147705e+01},
          {-7.32378616333e+01, -3.14497375488e+01, -3.16570053101e+01, -3.18642730713e+01, -3.20715370178e+01,  4.34913177490e+01},
          {-7.84793777466e+01, -3.39369506836e+01, -3.41442070007e+01, -3.43514747620e+01, -3.45587387085e+01,  4.62456169128e+01}},

         {{ 3.08663616180e+01,  1.47962942123e+01,  1.48951349258e+01,  1.49939699173e+01,  1.50928087234e+01, -1.67216835022e+01},
          { 2.41557064056e+01,  4.69108924866e+01,  4.72153549194e+01,  4.75198135376e+01,  4.78242645264e+01,  2.32265872955e+01},
          { 2.58600597382e+01,  5.05643844604e+01,  5.08688354492e+01,  5.11732940674e+01,  5.14777450562e+01,  2.51757221222e+01},
          { 2.75644168854e+01,  5.42178688049e+01,  5.45223312378e+01,  5.48267822266e+01,  5.51312408447e+01,  2.71248531342e+01}}}});
        System.out.println();
        assertEquals(expected, conv2d.out);
    }
}
